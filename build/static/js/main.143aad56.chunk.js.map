{"version":3,"sources":["components/FilterTool.js","components/ContactForm.js","components/ContactList.js","components/Notification.js","services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["FilterTool","updateFilterText","filterText","onChange","value","ContactForm","handleAdd","updateNewName","newName","updateNewNumber","newNumber","onSubmit","type","ContactList","persons","handleDelete","filter","person","name","toLowerCase","includes","map","number","onClick","event","id","Notification","message","status","className","baseUrl","axios","get","then","response","data","newPerson","post","delete","updatedPerson","put","App","useState","setFilterText","setPersons","setNewName","setNewNumber","setMessage","setStatus","useEffect","console","log","personService","target","preventDefault","personFound","find","undefined","returnedPerson","setTimeout","concat","catch","error","errorMessage","changedPerson","window","confirm","deletedPerson","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.143aad56.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst FilterTool = ({ updateFilterText, filterText }) => {\r\n  return (\r\n    <div>\r\n      filter shown with: <input onChange={updateFilterText} value={filterText} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterTool","import React from 'react'\r\n\r\nconst ContactForm = ({handleAdd, updateNewName, newName, updateNewNumber, newNumber}) => {\r\n  return (\r\n    <form onSubmit={handleAdd}>    \r\n      <div>\r\n        name: <input onChange={updateNewName} value={newName} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={updateNewNumber} value={newNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ContactForm","import React from 'react'\r\n\r\nconst ContactList = ({persons, handleDelete, filterText}) => {\r\n  return (\r\n    <div>\r\n      {/* If filter text is given, names will be filtered caseinsensitively.\r\n      If filter text is not given, all names will be shown */}\r\n      {filterText !== '' ?\r\n      (persons.filter(person => person.name.toLowerCase().includes(filterText.toLowerCase())).map((person) => {\r\n        return (\r\n          <p key={person.name}>\r\n            {person.name} {person.number} <button onClick={(event) => handleDelete(event, person.id, person.name)}>delete</button>\r\n          </p>\r\n        )\r\n      }))\r\n      :\r\n      (persons.map((person) => {\r\n        return (\r\n          <p key={person.name}>\r\n            {person.name} {person.number} <button onClick={(event) => handleDelete(event, person.id, person.name)}>delete</button>\r\n          </p>\r\n        )\r\n      }))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactList","import React from 'react'\r\n\r\nconst Notification = ({ message, status }) => {\r\n  if (message === null || status === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={status}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst updateNumber = (id, updatedPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deletePerson, updateNumber }","\nimport React, { useState, useEffect } from 'react'\nimport FilterTool from './components/FilterTool'\nimport ContactForm from \"./components/ContactForm\"\nimport ContactList from \"./components/ContactList\"\nimport Notification from \"./components/Notification\"\nimport personService from \"./services/persons\"\n\nconst App = () => {\n  const [ filterText, setFilterText ] = useState('')\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ status, setStatus ] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  const handleAdd = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    const personFound = persons.find(person => person.name === newName)\n    if (personFound === undefined) {\n      personService\n        .create(newPerson)\n          .then(returnedPerson => {\n            console.log(returnedPerson)\n            setMessage(\n              `'${newName}' was added`\n            )\n            setStatus('success')\n            setTimeout(() => {\n              setMessage(null)\n              setStatus(null)\n            }, 5000)\n            setPersons(persons.concat(returnedPerson))\n          })\n          .catch(error => {\n            const errorMessage = error.response.data.error\n            setMessage(\n              `Error occurred: '${errorMessage}'`\n            )\n            setStatus('error')\n            setTimeout(() => {\n              setMessage(null)\n              setStatus(null)\n            }, 5000)\n          })\n    } else {\n      const changedPerson = {...personFound, number: newNumber}\n      if (window.confirm(`${personFound.name} is already added to phonebook, replace number with new one?`)) {\n        personService\n          .updateNumber(personFound.id, changedPerson)\n            .then(updatedPerson => {\n              console.log(updatedPerson)\n              setMessage(\n                `'${updatedPerson.name}' number was updated`\n              )\n              setStatus('success')\n              setTimeout(() => {\n                setMessage(null)\n                setStatus(null)\n              }, 5000)\n              setPersons(persons.map(person => person.id !== personFound.id ? person : updatedPerson))\n            })\n            .catch(error => {\n              setMessage(\n                `'${personFound.name}' has been deleted from server`\n              )\n              setStatus('error')\n              setTimeout(() => {\n                setMessage(null)\n                setStatus(null)\n              }, 5000)\n              setPersons(persons.filter(person => person.id !== personFound.id))\n            })\n      }\n    }\n    \n    setNewName('')\n    setNewNumber('')\n  \n  }\n\n  const handleDelete = (event, id, name) => {\n    event.preventDefault()\n    if (window.confirm(`Do you really want to delete contact: ${name}?`)) {\n      personService\n      .deletePerson(id)\n        .then(deletedPerson => {\n          console.log(deletedPerson)\n          setMessage(\n            `'${name}' was deleted`\n          )\n          setStatus('success')\n          setTimeout(() => {\n            setMessage(null)\n            setStatus(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.id !== id))\n        })\n        .catch(error => {\n          setMessage(\n            `'${name}' has already been deleted from server`\n          )\n          setStatus('error')\n          setTimeout(() => {\n            setMessage(null)\n            setStatus(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n    \n  }\n\n  const updateFilterText = (event) => {\n    setFilterText(event.target.value)\n  }\n\n  const updateNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const updateNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <FilterTool updateFilterText={updateFilterText} filterText={filterText} />\n      \n      <h3>Add a new contact</h3>\n      <ContactForm \n        handleAdd={handleAdd}\n        updateNewName={updateNewName}\n        newName={newName}\n        updateNewNumber={updateNewNumber}\n        newNumber={newNumber}\n      />\n\n      <Notification message={message} status={status} />\n      \n      <h3>Names and numbers</h3>\n      \n      <ContactList \n        persons={persons}\n        handleDelete={handleDelete}\n        filterText={filterText}\n      />\n      \n    </div>\n  )\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}